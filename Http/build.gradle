apply plugin: 'com.android.library'

def releaseProperties() {
    def propertiesFile = file('keystore.properties')
    if (propertiesFile.canRead()) {
        def Properties properties = new Properties()
        properties.load(new FileInputStream(propertiesFile))
        if (properties != null && properties.containsKey('STORE_FILE') && properties.containsKey('STORE_PASSWORD') &&
                properties.containsKey('KEY_ALIAS') && properties.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(properties['STORE_FILE'])
            android.signingConfigs.release.storePassword = properties['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = properties['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = properties['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {}
        release {
            storeFile
            storePassword
            keyAlias
            keyPassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            minifyEnabled false
//            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    releaseProperties()

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/maom']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
        instrumentTest.setRoot('src/androidTest')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
    compile 'com.squareup.okio:okio:1.11.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    compile 'com.alibaba:fastjson:1.1.55.android'
    compile 'com.google.guava:guava:20.0'
    compile project(':Utils')
}
